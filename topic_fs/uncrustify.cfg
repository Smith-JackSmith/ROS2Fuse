# Uncrustify configuration for topic_fs (Stroustrup style)
# Copyright (c) 2025 Jack Sidman Smith

# General settings
newlines                        = auto        # Use system newlines (LF on Unix)
input_tab_size                  = 4           # Input tab size (4 spaces)
output_tab_size                 = 4           # Output tab size (4 spaces)
indent_with_tabs                = 0           # Use spaces, not tabs
indent_columns                  = 4           # Indent by 4 spaces (Stroustrup’s preference)

# Brace placement (Stroustrup: new line for functions, classes, control structures)
nl_fdef_brace                   = add         # Newline before function definition brace (void func()\n{)
nl_func_def_brace               = add         # Newline before function brace
nl_class_brace                  = add         # Newline before class brace
nl_struct_brace                 = add         # Newline before struct brace
nl_if_brace                     = add         # Newline before if brace (if (x)\n{)
nl_else_brace                   = add         # Newline before else brace (}\nelse\n{)
nl_for_brace                    = add         # Newline before for brace
nl_while_brace                  = add         # Newline before while brace
nl_do_brace                     = add         # Newline before do brace
nl_switch_brace                 = add         # Newline before switch brace
nl_brace_else                   = add         # Newline between } and else
nl_brace_catch                  = add         # Newline between } and catch

# Spacing (Stroustrup: clear, readable spacing)
# Explanation: the type is string& (string reference) 
# Rationale: void func(string & parm): is that the address of parm ? (obviously not, but, easily confused)
sp_before_byref                 = remove      # No space before reference (std::string& s)
sp_after_byref                  = add         # Space after reference (std::string & s)
sp_before_ptr_star              = remove      # No space before pointer star (int* p)
sp_after_ptr_star               = add         # Space after pointer star (int * p)
sp_after_comma                  = add         # Space after comma (x, y)
sp_before_comma                 = remove      # No space before comma
sp_after_semi                   = add         # Space after semicolon (x; y)
sp_before_semi                  = remove      # No space before semicolon
sp_func_call_paren              = remove      # No space before function call paren (func(x))
sp_around_assign                = add         # Space around assignment (x = y)
sp_inside_paren                 = remove      # No space inside parens (func(x))
sp_after_type                   = add         # Space after type (int x)
sp_after_constr_colon           = add         # Space after constructor colon (class X : Y)

# Constructor initialization lists (Stroustrup: single-line if short, multi-line if complex)
nl_class_init_args              = remove      # No newline in constructor init list if short
nl_constr_init_args             = remove      # No newline in constructor init list if short
indent_init_list                = 4           # Indent init list by 4 spaces if multi-line

# Line length and breaking
code_width                      = 125         # Max line length (Modern C++ standard)
ls_func_split_full              = false       # Don’t split function signatures unless necessary
nl_max                          = 2           # Max consecutive newlines
nl_after_func_body              = 2           # Two newline after function body
nl_after_func_body_class        = 2           # Two newline after class function body

# Comments (Stroustrup: align with code, clear headers)
cmt_indent                      = 0           # Align comments with code
cmt_star_cont                   = true        # Add star for multi-line comment continuation
cmt_sp_before_star_cont         = 1           # Space before star in multi-line comments
cmt_sp_after_star_cont          = 1           # Space after star in multi-line comments

# Indentation (Stroustrup: clear hierarchy)
indent_brace                    = 0           # No extra indent for braces
indent_paren_nl                 = false       # Don’t indent inside parens on newlines
indent_func_def_param           = false       # Don’t indent function parameters
indent_func_call_param          = false       # Don’t indent function call parameters
indent_class_colon              = true        # Indent after class colon
indent_constr_colon             = true        # Indent after constructor colon

# ROS 2 compatibility
nl_after_semicolon              = true        # Newline after semicolon in for loops
align_func_params               = false       # Don’t align function parameters
sp_before_case_colon            = remove      # No space before case colon